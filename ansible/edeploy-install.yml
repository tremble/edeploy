---
- hosts: edeployservers
  vars:
    - pxemngr: false
  user: root
  tasks:
  - name: ensure needed packages for eDeploy are installed (apt)
    apt: pkg={{ item }} state=present
    with_items:
      - apache2
      - python-ipaddr
      - python-pip
      - git
      - rsync
    when: ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu'
  - name: ensure needed packages for eDeploy are installed (yum)
    yum: pkg={{ item }} state=present
    with_items:
      - httpd
      - python-ipaddr
      - python-pip
      - git
      - rsync
      - unzip
      - gcc
      - glibc.i686
      - glibc-static
    when: ansible_distribution == 'CentOS' or ansible_distribution == 'RedHat'
  - name: extract eDeploy git repo
    git: repo=https://github.com/enovance/edeploy.git
         dest=/srv/edeploy force=no
  - name: create eDeploy config dir (deb)
    file: path=/etc/edeploy state=directory owner=www-data group=www-data
    when: ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu'
  - name: create eDeploy config dir (rhel)
    file: path=/etc/edeploy state=directory owner=apache group=apache
    when: ansible_distribution == 'CentOS' or ansible_distribution == 'RedHat'
  - name: copy config files
    cp: src=/srv/edeploy/config/* dest=/etc/edeploy
  - name: create edeploy CGI config
    ini_file: dest=/etc/edeploy.conf section=SERVER option=CONFIGDIR value=/etc/edeploy mode=0644
  - name: enable pxemngr support in CGI config
    ini_file: dest=/etc/edeploy.conf section=SERVER option=USEPXEMNGR value=True mode=0644
    when: pxemngr
  - name: set hw profiles dir in CGI config
    ini_file: dest=/etc/edeploy.conf section=SERVER option=HWDIR value=/var/lib/edeploy/hw mode=0644
  - name: set log dir in CGI config
    ini_file: dest=/etc/edeploy.conf section=SERVER option=LOGDIR value=/var/lib/edeploy/logs mode=0644
  - name: set health dir in CGI config
    ini_file: dest=/etc/edeploy.conf section=SERVER option=HEALTHDIR value=/var/lib/edeploy/health mode=0644
  - name: set lock file in CGI config (deb)
    ini_file: dest=/etc/edeploy.conf section=SERVER option=LOCKFILE value=/var/lock/apache2/edeploy.lock mode=0644
    when: ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu'
  - name: set lock file in CGI config (rhel)
    ini_file: dest=/etc/edeploy.conf section=SERVER option=LOCKFILE value=/var/run/httpd/edeploy.lock mode=0644
    when: ansible_distribution == 'CentOS' or ansible_distribution == 'RedHat'
  - name: set pxemngr URL in CGI config
    ini_file: dest=/etc/edeploy.conf section=SERVER option=PXEMNGRURL value=http://{{ ansible_default_ipv4["address"] }}/ mode=0644
    when: pxemngr
  - name: install eDeploy CGI script and set permissions for it (deb)
    file: src=/srv/edeploy/server/upload.py dest=/usr/lib/cgi-bin/upload.py state=link
    when: ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu'
  - name: install eDeploy CGI script and set permissions for it
    file: src=/srv/edeploy/server/upload.py dest=/var/www/cgi-bin/upload.py state=link
    when: ansible_distribution == 'CentOS' or ansible_distribution == 'RedHat'
  - name: install eDeploy health CGI script and set permissions for it (deb)
    file: src=/srv/edeploy/server/upload-health.py dest=/usr/lib/cgi-bin/upload-health.py state=link
    when: ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu'
  - name: install eDeploy health CGI script and set permissions for it
    file: src=/srv/edeploy/server/upload-health.py dest=/var/www/cgi-bin/upload-health.py state=link
    when: ansible_distribution == 'CentOS' or ansible_distribution == 'RedHat'
  - name: owner of state file (deb)
    file: path=/etc/edeploy/state owner=www-data group=www-data
    when: ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu'
  - name: owner of state file (rhel)
    file: path=/etc/edeploy/state owner=apache group=apache
    when: ansible_distribution == 'CentOS' or ansible_distribution == 'RedHat'
  - name: create directory for install trees
    file: path=/var/lib/debootstrap/install state=directory
  - name: create directory for hw profiles (deb)
    file: path=/var/lib/edeploy/hw state=directory owner=www-data group=www-data
    when: ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu'
  - name: create directory for hw profiles (rhel)
    file: path=/var/lib/edeploy/hw state=directory owner=apache group=apache
    when: ansible_distribution == 'CentOS' or ansible_distribution == 'RedHat'
  - name: create directory for log (deb)
    file: path=/var/lib/edeploy/logs state=directory owner=www-data group=www-data
    when: ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu'
  - name: create directory for log (rhel)
    file: path=/var/lib/edeploy/logs state=directory owner=apache group=apache
    when: ansible_distribution == 'CentOS' or ansible_distribution == 'RedHat'
  - name: create directory for health files (deb)
    file: path=/var/lib/edeploy/health state=directory owner=www-data group=www-data
    when: ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu'
  - name: create directory for health files (rhel)
    file: path=/var/lib/edeploy/health state=directory owner=apache group=apache
    when: ansible_distribution == 'CentOS' or ansible_distribution == 'RedHat'
  - name: link install trees location for web server
    file: src=/var/lib/debootstrap/install dest=/var/www/install state=link
  - name: fix cmdb permissions (deb)
    file: path={{ item }} owner=www-data group=www-data
    with_fileglob: /etc/edeploy/*.cmdb
    when: ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu'
  - name: fix cmdb permissions (rhel)
    file: path={{ item }} owner=apache group=apache
    with_fileglob: /etc/edeploy/*.cmdb
    when: ansible_distribution == 'CentOS' or ansible_distribution == 'RedHat'
  - name: create rsync conf file
    copy: src=rsyncd.conf dest=/etc/rsyncd.conf
  - name: enable rsync daemon
    lineinfile: dest=/etc/default/rsync regexp=RSYNC_ENABLE= line="RSYNC_ENABLE=true" state=present
    notify: start rsync daemon
    when: ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu'
  - name: install eDeploy profile in pxemngr
    template: src=edeploy.prof dest=/var/lib/tftpboot/pxelinux.cfg/profiles/edeploy.prof mode=0644
    notify: sync bootnames
    when: pxemngr
  - name: enable edeploy site in apache (rhel)
    copy: src=edeploy-httpd.conf dest=/etc/httpd/conf.d/edeploy.conf
    notify: enable edeploy site (rhel)
    when: ansible_distribution == 'CentOS' or ansible_distribution == 'RedHat'
  - name: install eDeploy AHC profile in pxemngr
    template: src=health-check.prof dest=/var/lib/tftpboot/pxelinux.cfg/profiles/health-check.prof mode=0644
    notify: sync bootnames
    when: pxemngr
  handlers:
    - name: sync bootnames
      command: pxemngr syncbootnames
      notify: set default PXE boot to eDeploy
    - name: set default PXE boot to eDeploy
      command: pxemngr nextboot default edeploy
    - name: start rsync daemon
      service: name=rsync state=started
    - name: enable edeploy site (deb)
      shell: a2ensite edeploy; service apache2 restart
    - name: enable edeploy site (rhel)
      shell: systemctl restart httpd.service
